# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

commands:
  # build TypeDoc
  build-typedoc:
    parameters:
      version:
        description: TypeDoc version
        type: string
        default: latest

      deploy:
        description: Whether to deploy
        type: boolean
        default: false

      source:
        description: Source
        type: string
        default: ""

      mode:
        description: Specifies the output mode the project is used to be compiled with.
        type: enum
        enum:
          - file
          - module

      # Theming
      theme:
        description: Specify the path to the theme that should be used.
        type: string
        default: default

    steps:
      - attach_workspace:
          at: ./

      - run:
          command: |
            npx typedoc@<<parameters.version>> <<parameters.source>> \
              --out ./docs \
              <<# parameters.mode>> --mode <<parameters.mode>> <</ parameters.mode>> \
              <<# parameters.theme>> --theme <<parameters.theme>> <</ parameters.theme>>

      - when:
          condition: <<parameters.deploy>>
          steps:
            - add_ssh_keys:
                fingerprints:
                  - "${SSH_KEY_FINGERPRINT}"

            # - run:
            #     command: |
            #       ssh-keyscan ${HOST_NAME} >> ~/.ssh/known_hosts

            - run:
                command: |
                  SOURCE_BRANCH="master"
                  TARGET_BRANCH="gh-pages"

                  GH_EMAIL=bot@maboroshi.biz
                  GH_NAME=maboroshi-bot

                  # if [ $CIRCLE_BRANCH == $SOURCE_BRANCH ]; then
                    git config --global user.email $GH_EMAIL
                    git config --global user.name $GH_NAME

                    git checkout $TARGET_BRANCH || git checkout --orphan $TARGET_BRANCH
                    git rm -rf --ignore-unmatch -- $(ls -A | grep -v -e '^docs$' -e '^.git' | tr '\n' ' ')

                    cp -aR docs/. .

                    git add -A
                    git commit -m "Automated deployment to GitHub Pages: ${CIRCLE_SHA1}" --allow-empty

                    git push origin $TARGET_BRANCH
                  # fi

jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}-{{ .Branch }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}-{{ .Branch }}

      # run lint
      - run: npm run lint

      # run type checking
      - run: npx tsc --noEmit

      # run tests!
      - run:
          name: Jest Suite
          command: npx jest --ci --testResultsProcessor="jest-junit"
          environment:
            JEST_JUNIT_OUTPUT: "/tmp/reports/junit/js-test-results.xml"
      - store_test_results:
          path: /tmp/reports/junit/js-test-results.xml
      - persist_to_workspace:
          root: ./
          paths:
            - ./*

  typedoc:
    docker:
      - image: circleci/node:10

    steps:
      - build-typedoc:
          mode: file
          theme: minimal
          deploy: true

workflows:
  version: 2
  build_and_docs:
    jobs:
      - build
      - typedoc:
          requires:
            - build
